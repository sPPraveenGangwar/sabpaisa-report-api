version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: sabpaisa_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: sabpaisa2_stage_sabpaisa
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-RootPass@123}
      MYSQL_USER: ${DB_USER:-sabpaisa_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-SabPass@123}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - sabpaisa_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: sabpaisa_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sabpaisa_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: sabpaisa_api
    restart: unless-stopped
    command: >
      sh -c "sleep 10 &&
             python manage.py migrate &&
             python manage.py createcachetable &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120"
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG:-False}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1}
      DB_ENGINE: django.db.backends.mysql
      DB_NAME: sabpaisa2_stage_sabpaisa
      DB_USER: ${DB_USER:-sabpaisa_user}
      DB_PASSWORD: ${DB_PASSWORD:-SabPass@123}
      DB_HOST: db
      DB_PORT: 3306
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sabpaisa_network

networks:
  sabpaisa_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  static_volume:
  media_volume:
